{"version":3,"sources":["hooks/useLocalStorage.js","components/Editor.js","components/App.js","index.js"],"names":["useLocalStorage","key","initialValue","prefixedKey","useState","jsonValue","localStorage","getItem","JSON","parse","value","setValue","useEffect","setItem","stringify","Editor","props","displayName","onChange","language","open","setOpen","className","type","onClick","icon","faCompressAlt","faExpandAlt","onBeforeChange","editor","data","options","lineWrapping","lint","mode","theme","lineNumbers","App","html","setHtml","css","setCss","js","setJs","srcDoc","setSrcDoc","timeout","setTimeout","clearTimeout","title","sandbox","frameBorder","width","height","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8MAGe,SAASA,EAAgBC,EAAKC,GAC3C,IAAMC,EAFO,iBAEgBF,EAD4B,EAE/BG,oBAAS,WACjC,IAAMC,EAAYC,aAAaC,QAAQJ,GACvC,OAAiB,MAAbE,EAA0BG,KAAKC,MAAMJ,GAEb,oBAAjBH,EACFA,IAEAA,KAT8C,mBAElDQ,EAFkD,KAE3CC,EAF2C,KAezD,OAHAC,qBAAU,WACRN,aAAaO,QAAQV,EAAaK,KAAKM,UAAUJ,MAChD,CAACP,EAAaO,IACV,CAACA,EAAOC,G,uDCLF,SAASI,EAAOC,GAAQ,IAEnCC,EAIED,EAJFC,YACAP,EAGEM,EAHFN,MACAQ,EAEEF,EAFFE,SACAC,EACEH,EADFG,SALkC,EAOZf,oBACtB,GARkC,mBAO7BgB,EAP6B,KAOvBC,EAPuB,KAiBpC,OACE,yBACEC,UAAS,2BACPF,EAAO,GAAK,cAGd,yBAAKE,UAAU,gBACZL,EACD,4BACEM,KAAK,SACLD,UAAU,sBACVE,QAAS,kBAAMH,GAASD,KAExB,kBAAC,IAAD,CACEK,KACEL,EACIM,IACAC,QAKZ,kBAAC,aAAD,CACEC,eA9Be,SACnBC,EACAC,EACApB,GAEAQ,EAASR,IA0BLA,MAAOA,EACPY,UAAU,sBACVS,QAAS,CACPC,cAAc,EACdC,MAAM,EACNC,KAAMf,EACNgB,MAAO,WACPC,aAAa,MCHRC,MAtDf,WAAgB,IAAD,EACWrC,EAAgB,OAAQ,IADnC,mBACNsC,EADM,KACAC,EADA,OAESvC,EAAgB,MAAO,IAFhC,mBAENwC,EAFM,KAEDC,EAFC,OAGOzC,EAAgB,KAAM,IAH7B,mBAGN0C,EAHM,KAGFC,EAHE,OAIevC,mBAAS,IAJxB,mBAINwC,EAJM,KAIEC,EAJF,KAkBb,OAbAjC,qBAAU,WACR,IAAMkC,EAAUC,YAAW,WACzBF,EAAU,qCAAD,OAEGP,EAFH,qCAGIE,EAHJ,uCAIKE,EAJL,yCAOR,KACH,OAAO,kBAAMM,aAAaF,MACzB,CAACR,EAAME,EAAKE,IAGb,oCACE,yBAAKpB,UAAU,iBACb,kBAACP,EAAD,CACEI,SAAS,MACTF,YAAY,OACZP,MAAO4B,EACPpB,SAAUqB,IAEZ,kBAACxB,EAAD,CACEI,SAAS,MACTF,YAAY,MACZP,MAAO8B,EACPtB,SAAUuB,IAEZ,kBAAC1B,EAAD,CACEI,SAAS,aACTF,YAAY,KACZP,MAAOgC,EACPxB,SAAUyB,KAGd,yBAAKrB,UAAU,QACb,4BACEsB,OAAQA,EACRK,MAAM,SACNC,QAAQ,gBACRC,YAAY,IACZC,MAAM,OACNC,OAAO,YC9CjBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.682b5af6.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\n\nconst PREFIX = \"codepen-clone-\";\nexport default function useLocalStorage(key, initialValue) {\n  const prefixedKey = PREFIX + key;\n  const [value, setValue] = useState(() => {\n    const jsonValue = localStorage.getItem(prefixedKey);\n    if (jsonValue != null) return JSON.parse(jsonValue);\n\n    if (typeof initialValue === \"function\") {\n      return initialValue();\n    } else {\n      return initialValue;\n    }\n  });\n  useEffect(() => {\n    localStorage.setItem(prefixedKey, JSON.stringify(value));\n  }, [prefixedKey, value]);\n  return [value, setValue];\n}\n","import React, { useState } from \"react\";\nimport \"codemirror/lib/codemirror.css\";\nimport \"codemirror/theme/material.css\";\nimport \"codemirror/mode/xml/xml\";\nimport \"codemirror/mode/javascript/javascript\";\nimport \"codemirror/mode/css/css\";\nimport { Controlled as ControlledEditor } from \"react-codemirror2\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faCompressAlt,\n  faExpandAlt,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nexport default function Editor(props) {\n  const {\n    displayName,\n    value,\n    onChange,\n    language,\n  } = props;\n  const [open, setOpen] = useState(\n    true\n  );\n  const handleChange = (\n    editor,\n    data,\n    value\n  ) => {\n    onChange(value);\n  };\n  return (\n    <div\n      className={`editor-container ${\n        open ? \"\" : \"collapsed\"\n      }`}\n    >\n      <div className=\"editor-title\">\n        {displayName}\n        <button\n          type=\"button\"\n          className=\"expand-collapse-btn\"\n          onClick={() => setOpen(!open)}\n        >\n          <FontAwesomeIcon\n            icon={\n              open\n                ? faCompressAlt\n                : faExpandAlt\n            }\n          />\n        </button>\n      </div>\n      <ControlledEditor\n        onBeforeChange={handleChange}\n        value={value}\n        className=\"code-mirror-wrapper\"\n        options={{\n          lineWrapping: true,\n          lint: true,\n          mode: language,\n          theme: \"material\",\n          lineNumbers: true,\n        }}\n      />\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport useLocalStorage from \"../hooks/useLocalStorage\";\nimport Editor from \"./Editor\";\n\nfunction App() {\n  const [html, setHtml] = useLocalStorage(\"html\", \"\");\n  const [css, setCss] = useLocalStorage(\"css\", \"\");\n  const [js, setJs] = useLocalStorage(\"js\", \"\");\n  const [srcDoc, setSrcDoc] = useState(\"\");\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      setSrcDoc(`\n        <html>\n          <body>${html}</body>\n          <style>${css}</style>\n          <script>${js}</script>\n        </html>\n     `);\n    }, 250);\n    return () => clearTimeout(timeout);\n  }, [html, css, js]);\n\n  return (\n    <>\n      <div className=\"pane top-pane\">\n        <Editor\n          language=\"xml\"\n          displayName=\"HTML\"\n          value={html}\n          onChange={setHtml}\n        />\n        <Editor\n          language=\"css\"\n          displayName=\"CSS\"\n          value={css}\n          onChange={setCss}\n        />\n        <Editor\n          language=\"javascript\"\n          displayName=\"JS\"\n          value={js}\n          onChange={setJs}\n        />\n      </div>\n      <div className=\"pane\">\n        <iframe\n          srcDoc={srcDoc}\n          title=\"output\"\n          sandbox=\"allow-scripts\"\n          frameBorder=\"0\"\n          width=\"100%\"\n          height=\"100%\"\n        />\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}